# IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# It is recommended to regenerate this file in the future when you upgrade to a
# newer version of cucumber-rails. Consider adding your own code to a new file
# instead of editing this one. Cucumber will automatically load all features/**/*.rb
# files.
require 'cucumber/rails'

class ActiveRecord::Base
  mattr_accessor :shared_connection
  @@shared_connection = nil
  def self.connection
    @@shared_connection || ConnectionPool::Wrapper.new(:size => 1) { retrieve_connection }
  end
end
ActiveRecord::Base.shared_connection = ActiveRecord::Base.connection
# Forces all threads to share the same connection. This works on
# Capybara because it starts the web server in a thread.
# ActiveRecord::Base.shared_connection = ActiveRecord::Base.connection
ActionController::Base.allow_rescue = false
Capybara.default_selector = :css
Capybara.default_driver = :chrome
Capybara.register_driver :chrome do |app|
 options = {
  :js_errors => false,
  :timeout => 360,
  :inspector => false,
 }
 # Launch chrome browser in full screen 
 browser_options = ::Selenium::WebDriver::Chrome::Options.new()
    browser_options.args << '--window-size=1920,1080'
    Capybara::Selenium::Driver.new(app,
      browser: :chrome,
      options: browser_options
    )
end
Capybara.default_max_wait_time = 5
Capybara.configure do |config|
  config.run_server = true
  config.server_port = 3004 
  config.javascript_driver = :webkit
  
  # config.always_include_port = true
  # config.default_host = 'http://127.0.0.1:3004'
  # config.app_host = 'http://127.0.0.1:3004'
end

# Remove/comment out the lines below if your app doesn't have a database.
# For some databases (like MongoDB and CouchDB) you may need to use :truncation instead.
begin
  require 'database_cleaner'
  require 'database_cleaner/cucumber'
  DatabaseCleaner.strategy = :truncation
rescue NameError
  raise "You need to add database_cleaner to your Gemfile (in the :test group) if you wish to use it."
end


# You may also want to configure DatabaseCleaner to use different strategies for certain features and scenarios.
# See the DatabaseCleaner documentation for details. Example:
#
#   Before('@no-txn,@selenium,@culerity,@celerity,@javascript') do
#     # { :except => [:widgets] } may not do what you expect here
#     # as Cucumber::Rails::Database.javascript_strategy overrides
#     # this setting.
#     DatabaseCleaner.strategy = :truncation
#   end
#
#   Before('~@no-txn', '~@selenium', '~@culerity', '~@celerity', '~@javascript') do
#     DatabaseCleaner.strategy = :transaction
#   end
#
# Possible values are :truncation and :transaction
# The :transaction strategy is faster, but might give you threading problems.
# See https://github.com/cucumber/cucumber-rails/blob/master/features/choose_javascript_database_strategy.feature
 Cucumber::Rails::Database.javascript_strategy = :truncation 
Around do |scenario, block|
  DatabaseCleaner.cleaning(&block)
end
Cucumber::Rails::Database.javascript_strategy = :truncation